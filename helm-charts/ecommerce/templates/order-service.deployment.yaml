apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.orderService.name }}
  labels:
    app: {{ .Values.orderService.name }}
spec:
  replicas: {{ .Values.orderService.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Values.orderService.name }}
  template:
    metadata:
      labels:
        app: {{ .Values.orderService.name }}
    spec:
      initContainers:
      - name: migrate
        image: "{{ .Values.orderService.image }}:{{ .Values.orderService.imageTag }}"
        imagePullPolicy: Never
        env:
        - name: DB_USERNAME
          value: postgres
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              key: postgres-password
              name: "{{ .Chart.Name }}-postgresql"
        - name: DB_NAME
          value: postgres
        - name: DB_HOST
          value: "{{ .Chart.Name }}-postgresql"
        - name: DB_PORT
          value: "5432"
        args: ["npm","run","migrate:up"]
      containers:
        - name: {{ .Values.orderService.name }}
          image: "{{ .Values.orderService.image }}:{{ .Values.orderService.imageTag }}"
          imagePullPolicy: Never
          ports:
            - name: {{ .Values.orderService.service.portName }}
              containerPort: 5000
              protocol: TCP
          env:
          - name: PORT
            value: "5000"
          - name: DB_USERNAME
            value: postgres
          - name: DB_PASSWORD
            valueFrom:
              secretKeyRef:
                key: postgres-password
                name: "{{ .Chart.Name }}-postgresql"
          - name: DB_NAME
            value: postgres
          - name: DB_HOST
            value: "{{ .Chart.Name }}-postgresql"
          - name: DB_PORT
            value: "5432"
          - name: USER_SERVICE
            value: "http://{{ .Values.userService.name }}" 
          - name: PRODUCT_SERVICE
            value: "http://{{ .Values.productService.name }}"  
          - name: RABBITMQ_PASSWORD
            valueFrom:
              secretKeyRef:
                key: rabbitmq-password
                name: "{{ .Chart.Name }}-rabbitmq"
          - name: RABBITMQ_USERNAME
            value: user
          - name: RABBITMQ_HOST
            value: "{{ .Chart.Name }}-rabbitmq"       
          livenessProbe:
            httpGet:
              path: /health
              port: {{ .Values.orderService.service.portName }}
          readinessProbe:
            httpGet:
              path: /ready
              port: {{ .Values.orderService.service.portName }}
          resources:
            limits:
              cpu: 500m
            requests:
              cpu: 200m
          args: ["npm","start"]    
