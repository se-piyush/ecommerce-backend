apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.productService.name }}
  labels:
    app: {{ .Values.productService.name }}
spec:
  replicas: {{ .Values.productService.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Values.productService.name }}
  template:
    metadata:
      labels:
        app: {{ .Values.productService.name }}
    spec:
      containers:
        - name: {{ .Values.productService.name }}
          image: "{{ .Values.productService.image }}:{{ .Values.productService.imageTag }}"
          imagePullPolicy: Never
          env:
          - name: MONGO_USER
            value: root
          - name: MONGO_HOST
            value: "{{ .Chart.Name }}-mongodb"  
          - name: MONGO_PASSWORD
            valueFrom:
              secretKeyRef:
                key: mongodb-root-password
                name: "{{ .Chart.Name }}-mongodb" 
          - name: MONGO_PORT
            value: "27017"
          - name: PORT
            value: "4000"
          - name: USER_SERVICE
            value: {{ .Values.userService.name }}           
          ports:
            - name: {{ .Values.productService.service.portName }}
              containerPort: 4000
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /health
              port: {{ .Values.productService.service.portName }}
          readinessProbe:
            httpGet:
              path: /ready
              port: {{ .Values.productService.service.portName }}
          resources:
            limits:
              cpu: 500m
            requests:
              cpu: 200m
          args: ["npm","start"]    
